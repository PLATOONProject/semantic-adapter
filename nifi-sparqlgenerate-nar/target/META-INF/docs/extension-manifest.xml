<extensionManifest><systemApiVersion>1.13.2</systemApiVersion><extensions><extension><name>fr.crigen.vx.processors.sparqlgenerate.SparqlGenerateSemanticAdatperProcessor</name><type>PROCESSOR</type><deprecationNotice/><description>This processor transforms non-semantic data to semantic data in realtime. One processor will define exactly one sparql query and expects same type of data that needs to be semantic transformed. Execution of this processor is on local JVM and will be utilizing resource on the same system where NiFi is running</description><tags><tag>semantic, adapter, sparqlgenerate, vx, platoon</tag></tags><properties><property><name>SPARQL_QUERY</name><displayName>SparQL Query</displayName><description>SparqlGenerate query used to transform input data to semantic data</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>OUTPUT_FORMAT</name><displayName>Output Format</displayName><description>RDF Data output format</description><defaultValue>TTL</defaultValue><allowableValues><allowableValue><displayName>TTL</displayName><value>TTL</value><description></description></allowableValue><allowableValue><displayName>JSON-LD</displayName><value>JSON-LD</value><description></description></allowableValue><allowableValue><displayName>RDF/XML</displayName><value>RDF/XML</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>DATA_SOURCE</name><displayName>Source Data</displayName><description>Leave empty if to be taken from FlowFile</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>SOURCE_MESSAGE_VARIABLE</name><displayName>Source_Message_Variable</displayName><description>The main source message variable is used by the SPARQL Generate Query. For instance in the iteration line of code : ITERATOR iter:CSV(?main_source_message) AS ?message</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties></dynamicProperties><relationships><relationship><name>success</name><description>If the SparQL Generate process is successful, output will be flown to this relationship</description><autoTerminated>false</autoTerminated></relationship><relationship><name>failed</name><description>If the SparQL Generate process is failed, error will be routed to this relationship</description><autoTerminated>false</autoTerminated></relationship></relationships><dynamicRelationship></dynamicRelationship><readsAttributes><readsAttribute><name></name><description></description></readsAttribute></readsAttributes><writesAttributes><writesAttribute><name></name><description></description></writesAttribute></writesAttributes><stateful></stateful><restricted></restricted><inputRequirement></inputRequirement><systemResourceConsiderations></systemResourceConsiderations><seeAlso></seeAlso></extension></extensions></extensionManifest>